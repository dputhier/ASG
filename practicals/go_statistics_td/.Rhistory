source('~/.active-rstudio-document', echo=TRUE)
N <- 10000
m <- 1000
n <- N - m
k <- 100
x <- 20
# P(X = 20 | m, n, k)
choose(n = m, k=x) * choose(n=n, k=k-x) / choose(n=m+n, k=k)
dhyper(x=x, m = m, n = n, k=k)
g <- 75 ## Number of submitted genes
k <- 59 ## Size of the selection, i.e. submitted genes with at least one annotation in GO biological processes
m <- 611 ## Number of "marked" elements, i.e. genes associated to this biological process
N <- 13588 ## Total number of genes with some annotation in GOTERM_BP_FAT.
n <- N - m ## Number of "non-marked" elements, i.e. genes not associated to this biological process
x <- 19 ## Number of "marked" elements in the selection, i.e. genes of the group of interest that are associated to this biological process
## the percent of the gene selection involved in the process.
percent.gene.selection <- x / k * 100
(percent.gene.selection <- x / k * 100)
(percentage.biological.process <- x / m * 100)
(expected.x <- m / N * k)
(expected.x <- m / N * k)
fold.enrichment <-  x / expected.x
(fold.enrichment <-  x / expected.x )
(fold.enrichment <-  (x / k ) / (m / N))
min(k,m)
## The range of the x values
x <- 0:min(k,m)
##
y <- dhyper(x = x, m = m, n = n, k = k)
plot(x, y)
plot(x, y)
plot(x,
y,
xlab="x",
ylab="probabilité hypergéométrique P(X = x | m, n, k)",
type="h",
lwd=3,
color="blue",
main="Fonction de densité hypergéométrique")
plot(x,
y,
xlab="x",
ylab="probabilité hypergéométrique \nP(X = x | m, n, k)",
type="h",
lwd=3,
color="blue",
main="Fonction de densité hypergéométrique")
## The range of the x values
x <- 0:min(k,m)
##
y <- dhyper(x = x, m = m, n = n, k = k)
plot(x,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
color="blue",
main="Fonction de densité hypergéométrique")
## The range of the x values
x <- 0:min(k,m)
##
y <- dhyper(x = x, m = m, n = n, k = k)
plot(x,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique")
warnings()
## The range of the x values
x <- 0:min(k,m)
##
y <- dhyper(x = x, m = m, n = n, k = k)
plot(x,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique")
plot(x,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
ylim=c(0, max(y)*1.5))
arrows(expected.x,
max(y)*1.3,
expected.x,
max(y)*1.1,
col="green")
text(expected.x,
max(y) * 1.4,
"Expected value")
plot(x,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
ylim=c(0, max(y)*1.5))
arrows(expected.x,
max(y) * 1.3,
expected.x,
max(y) * 1.1,
col="green")
text(expected.x,
max(y) * 1.4,
"Expected value",
cex=0.6)
plot(x,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
ylim=c(0, max(y)*1.5))
arrows(expected.x,
max(y) * 1.3,
expected.x,
max(y) * 1.1,
col="green")
text(expected.x,
max(y) * 1.4,
"Expected x value",
cex=0.6)
arrows(x,
max(y) * 1.3,
x,
max(y) * 1.1,
col="red")
text(x,
max(y) * 1.4,
"Observed x value",
cex=0.6)
x <- 19
x.range <- 0:min(k,m)
y <- dhyper(x = x.range, m = m, n = n, k = k)
plot(x,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
ylim=c(0, max(y)*1.5))
arrows(expected.x,
max(y) * 1.3,
expected.x,
max(y) * 1.1,
col="green")
text(expected.x,
max(y) * 1.4,
"Expected x value",
cex=0.6)
arrows(x,
max(y) * 1.3,
x,
max(y) * 1.1,
col="red")
text(x,
max(y) * 1.4,
"Observed x value",
cex=0.6)
plot(x.range,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
ylim=c(0, max(y)*1.5))
arrows(expected.x,
max(y) * 1.3,
expected.x,
max(y) * 1.1,
col="green")
text(expected.x,
max(y) * 1.4,
"Expected x value",
cex=0.6)
arrows(x,
max(y) * 1.3,
x,
max(y) * 1.1,
col="red")
text(x,
max(y) * 1.4,
"Observed x value",
cex=0.6)
x <- 19
x.range <- 0:min(k,m)
##
y <- dhyper(x = x.range, m = m, n = n, k = k)
plot(x.range,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
ylim=c(0, max(y)*1.5))
arrows(expected.x,
max(y) * 1.3,
expected.x,
max(y) * 1.1,
col="green")
text(expected.x,
max(y) * 1.4,
"Expected x value",
cex=0.6)
arrows(x,
max(y) * 1.3,
x,
max(y) * 1.1,
col="red")
text(x,
max(y) * 1.4,
"Observed x value",
cex=0.6)
plot(x.range,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
log="y")
plot(x.range,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="l",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
log="y")
plot(x.range,
log10(y),
xlab="x",
ylab="P(X = x | m, n, k)",
type="l",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique")
plot(x.range,
y,
xlab="x",
ylab="P(X = x | m, n, k)",
type="h",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique",
ylim=c(0, max(y)*1.5))
x.range
sum(dhyper(x = 19:59, m=m, n=n, k=k))
phyper(x-1, m=m, n=n, k=k, lower.tail = FALSE)
plot(1:min(k,m),
phyper((1:min(k,m)) - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l")
plot(1:min(k,m),
phyper((1:min(k,m)) - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l")
plot(1:min(k,m),
phyper((1:min(k,m)) - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
plot(0:min(k,m),
phyper((0:min(k,m)) - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
plot(0:min(k,m),
phyper((0:min(k,m)) - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
abline(h=0)
plot(0:min(k,m),
phyper((0:min(k,m)) - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
abline(v=0)
x.range
plot(x.range,
phyper(x.range - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
abline(v=0)
points(x.range,
dhyper(x.range,  m=m, n=n, k=k),
type="h",
col="blue",
lwd=2
)
plot(x.range,
phyper(x.range - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
points(x.range,
dhyper(x.range,  m=m, n=n, k=k),
type="h",
col="blue",
lwd=2
)
plot(x.range,
log10(y),
xlab="x",
ylab="P(X = x | m, n, k)",
type="l",
lwd=3,
col="blue",
main="Fonction de densité hypergéométrique")
## The associated p-value (for Cell cycle term , GO TERM BP)
sum(dhyper(x = 19:59, m=m, n=n, k=k))
phyper(x-1, m=m, n=n, k=k, lower.tail = FALSE)
## Diagram of the p-value for values in x range
plot(x.range,
phyper(x.range - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
points(x.range,
dhyper(x.range,  m=m, n=n, k=k),
type="h",
col="blue",
lwd=2
)
abline(v=0)
plot(x.range,
phyper(x.range - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
points(x.range,
dhyper(x.range,  m=m, n=n, k=k),
type="h",
col="blue",
lwd=2
)
plot(x.range,
phyper(x.range - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
points(x.range,
dhyper(x.range,  m=m, n=n, k=k),
type="h",
col="blue",
lwd=2
)
plot(x.range,
phyper(x.range - 1, m=m, n=n, k=k, lower.tail = FALSE),
col="blue",
type="l",
ylim=c(0,1))
points(x.range,
dhyper(x.range,  m=m, n=n, k=k),
type="h",
col="blue",
lwd=2
)
contingency.table <- matrix(NA, nc=2, nr=2)
contingency.table <- matrix(NA, nc=2, nr=2)
`
)
contingency.table
contingency.table <- matrix(NA, nc=2, nr=2)
row.names(contingency.table) <- c("marked.genes",
"non.marked.genes")
contingency.table
contingency.table <- matrix(NA, nc=2, nr=2)
row.names(contingency.table) <- c("marked.genes",
"non.marked.genes")
colnames(contingency.table) <- c("selected.genes",
"non.selected.genes")
contingency.table
contingency.table <- matrix(NA, nc=2, nr=2)
row.names(contingency.table) <- c("marked.genes",
"non.marked.genes")
colnames(contingency.table) <- c("selected.genes",
"non.selected.genes")
contingency.table[1, 1] <- x
contingency.table["marked.genes" , ""non.selected.genes""] <- m - x
contingency.table[1, 1] <- x
contingency.table["marked.genes" , "non.selected.genes"] <- m - x
contingency.table
contingency.table <- matrix(NA, nc=2, nr=2)
row.names(contingency.table) <- c("marked.genes",
"non.marked.genes")
colnames(contingency.table) <- c("selected.genes",
"non.selected.genes")
contingency.table[1, 1] <- x
contingency.table["marked.genes" , "non.selected.genes"] <- m - x
contingency.table["non.marked.genes" , "selected.genes"] <- k - x
contingency.table["non.marked.genes" , "non.selected.genes"] <-  n - (k + x)
contingency.table
n - (k + x)
fisher.test(x=contingency.table,alternative = "greater")
n
m
g <- 75 ## Number of submitted genes
k <- 59 ## Size of the selection, i.e. submitted genes with at least one annotation in GO biological processes
m <- 611 ## Number of "marked" elements, i.e. genes associated to this biological process
N <- 13588 ## Total number of genes with some annotation in GOTERM_BP_FAT.
n <- N - m ## Number of "non-marked" elements, i.e. genes not associated to this biological process
x <- 19 ## Number of "marked" elements in the selection, i.e. genes of the group of interest that are associated to this biological process
## the percent of the gene selection involved in the process.
n
m
contingency.table <- matrix(NA, nc=2, nr=2)
row.names(contingency.table) <- c("marked.genes",
"non.marked.genes")
colnames(contingency.table) <- c("selected.genes",
"non.selected.genes")
contingency.table[1, 1] <- x
contingency.table["marked.genes" , "non.selected.genes"] <- m - x
contingency.table["non.marked.genes" , "selected.genes"] <- k - x
contingency.table["non.marked.genes" , "non.selected.genes"] <-  n - (k + x)
contingency.table
contingency.table <- matrix(NA, nc=2, nr=2)
row.names(contingency.table) <- c("marked.genes",
"non.marked.genes")
colnames(contingency.table) <- c("selected.genes",
"non.selected.genes")
contingency.table[1, 1] <- x
contingency.table["marked.genes" , "non.selected.genes"] <- m - x
contingency.table["non.marked.genes" , "selected.genes"] <- k - x
contingency.table["non.marked.genes" , "non.selected.genes"] <-  n - (k - x)
fisher.test(x=contingency.table,alternative = "greater")
phyper(x-1, m=m, n=n, k=k)
phyper(x-1, m=m, n=n, k=k, lower.tail = F)
fisher.test.result <- fisher.test(x=contingency.table,alternative = "greater")
fisher.test.result
is(fisher.test.result)
names(fisher.test.result)
fisher.test.result$p.value
phyper(x-1, m=m, n=n, k=k, lower.tail = F)
